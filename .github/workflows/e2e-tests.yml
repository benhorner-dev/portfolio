name: E2E Tests
on:
  pull_request:
permissions:
  id-token: write
  contents: read
  issues: write
  pull-requests: write
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_REGION: ap-southeast-2
jobs:
  setup-and-run-tests:
    runs-on: ubuntu-latest
    environment: ci
    strategy:
      matrix:
        include:
          - test-file: "home"
            needs-chromadb: false
            needs-backend: false
      fail-fast: false
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.test-file }}
      cancel-in-progress: true
    name: E2E - ${{ matrix.test-file }}
    env:
      VERCEL_ENV: 'preview'
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      backend-postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      metrics-postgres:
        image: postgres:latest
        ports:
          - 5433:5432
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      neo4j:
        image: neo4j:latest
        ports:
          - 7474:7474
          - 7687:7687
        env:
          NEO4J_AUTH: neo4j/password
        options: >-
          --health-cmd "cypher-shell -u neo4j -p password 'RETURN 1'"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install dependencies
        run: |
          bun install
          bun add -D wait-on
          bunx playwright install --with-deps
      - name: Make scripts executable
        run: chmod +x tools/ci/*.sh
      - name: Start server
        run: ./tools/ci/start-dev-server.sh
      - name: Wait for development server
        run: ./tools/ci/wait-for-service.sh localhost 3000
      - name: Run E2E tests
        run: ./tools/ci/run-e2e-tests.sh "tests/${{ matrix.test-file }}.spec.ts"
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 1
      - name: Upload server logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dev-server-logs-${{ strategy.job-index }}
          path: server-logs.txt
          retention-days: 1
