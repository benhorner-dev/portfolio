name: Manage Preview Branch for Pull Request

on:
  deployment_status:
  pull_request:
    types:
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  setup:
    name: Setup
    outputs:
      branch: ${{ steps.branch_name.outputs.current_branch }}
      pr_number: ${{ steps.pr_info.outputs.pr_number }}
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v8

      - name: Get PR number from deployment
        id: pr_info
        run: |
          echo "🔍 Event name: ${{ github.event_name }}"
          echo "🔍 Event number: ${{ github.event.number }}"

          if [[ "${{ github.event_name }}" == "deployment_status" ]]; then
            echo "🔍 Deployment ref: ${{ github.event.deployment.ref }}"
            if [[ "${{ github.event.deployment.ref }}" =~ preview/pr-([0-9]+)- ]]; then
              echo "pr_number=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
              echo "✅ Extracted PR number from deployment ref: ${BASH_REMATCH[1]}"
            else
              echo "pr_number=${{ github.event.number }}" >> $GITHUB_OUTPUT
              echo "✅ Using event number as PR number: ${{ github.event.number }}"
            fi
          else
            echo "pr_number=${{ github.event.number }}" >> $GITHUB_OUTPUT
            echo "✅ Using event number as PR number: ${{ github.event.number }}"
          fi

  migrate_preview_branch:
    name: Run Migrations on Preview Branch
    runs-on: ubuntu-latest
    needs: setup
    if: |
      github.event_name == 'deployment_status' &&
      github.event.deployment_status.state == 'success' &&
      github.event.deployment.environment == 'Preview'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Get Neon Branch Connection String
        id: get_neon_branch
        run: |
          BRANCH_NAME="preview/pr-${{ needs.setup.outputs.pr_number }}-${{ needs.setup.outputs.branch }}"

          echo "🔍 Debug info:"
          echo "  PR Number: ${{ needs.setup.outputs.pr_number }}"
          echo "  Branch: ${{ needs.setup.outputs.branch }}"
          echo "  Constructed branch name: $BRANCH_NAME"

          # Get branch info from Neon API
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.NEON_API_KEY }}" \
            "https://console.neon.tech/api/v2/projects/${{ vars.NEON_PROJECT_ID }}/branches")

          # Extract the database URL for our branch
          DB_URL=$(echo "$RESPONSE" | jq -r --arg branch_name "$BRANCH_NAME" \
            '.branches[] | select(.name == $branch_name) | .connection_uris[0].connection_uri')

          if [ "$DB_URL" = "null" ] || [ -z "$DB_URL" ]; then
            echo "❌ Branch $BRANCH_NAME not found in Neon"
            exit 1
          fi

          echo "DATABASE_URL=$DB_URL" >> $GITHUB_OUTPUT
          echo "✅ Found database URL for branch: $BRANCH_NAME"

      - name: Run Migrations on Preview Branch
        run: |
          bun install
          bunx turbo migrate
        env:
          DATABASE_URL: "${{ steps.get_neon_branch.outputs.DATABASE_URL }}"

  delete_preview_branch:
    name: Delete Preview Neon Branch
    uses: ./.github/workflows/neon-delete-branch.yml
    needs: setup
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    with:
      branch_name: "preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}"
    secrets: inherit
