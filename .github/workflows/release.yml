name: Release
on:
  push:
    branches:
      # TODO: change below to main to run
      - NEVER
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
concurrency:
  group: ${{ github.ref_name }}-deploy
  cancel-in-progress: false # Wait for running deployments first prior to starting a new one
permissions:
  id-token: write
  contents: write
  issues: write
  pull-requests: write
jobs:
  prebuild:
    name: Prebuild setup and semantic release
    runs-on: ubuntu-latest
    outputs:
      released: ${{ steps.tag.outputs.released }}
      version: ${{ steps.tag.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Tag semantic release
        id: tag
        uses: ./.github/actions/tag

  deploy-frontend-staging:
    needs: [prebuild]
    name: Deploy frontend to staging
    runs-on: ubuntu-latest
    outputs:
      staging_url: ${{ steps.deploy-staging.outputs.staging_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Vercel CLI
        run: bun i -g vercel

      - name: Deploy to Vercel staging
        id: deploy-staging
        run: |
          STAGING_URL=$(vercel deploy --token ${{ secrets.VERCEL_TOKEN }} --yes)
          echo "staging_url=${STAGING_URL}" >> $GITHUB_OUTPUT
          echo "✅ Frontend deployed to staging: ${STAGING_URL}"
  smoke-tests:
    name: Run smoke tests
    runs-on: ubuntu-latest
    environment: staging
    needs: [deploy-frontend-staging]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Run smoke tests
        env:
          PLAYWRIGHT_VERCEL_TOKEN: ${{ secrets.VERCEL_AUTOMATION_BYPASS_SECRET }}
          PLAYWRIGHT_BASE_URL: ${{ needs.deploy-frontend-staging.outputs.staging_url }}
        run: |
          bun install
          echo "Running smoke tests against:"

          cd apps/frontend
          # bun run test:smoke
          # Add your actual smoke test commands here
          echo "✅ Smoke tests passed"

  deploy-frontend-production:
    name: Deploy frontend to production
    runs-on: ubuntu-latest
    needs: [smoke-tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Vercel CLI
        run: bun i -g vercel

      - name: Deploy to Vercel production
        run: |
          PRODUCTION_URL=$(vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes)
          echo "✅ Frontend deployed to production: ${PRODUCTION_URL}"
